using System;
using System.Collections.Generic;
using System.Linq;

namespace Receipt
{
    class Program
    {
        static void Main(string[] args)
        {
            try
            {
            List<string> NoTax = new List<string>(new string[] { "book", "chocolate","Medicine","Pill"});
            Console.WriteLine("Enter the number of items in the receipt");
            int NoOfItems =Convert.ToInt32(Console.ReadLine());
            Console.WriteLine("Enter the Items in the receipt");
            List<string> Items = new List<string>();
            for (int i = 0; i < NoOfItems; i++)
            {
                string Temp = Console.ReadLine();
                Items.Add(Temp);
                
            }
            List<ReceiptItems> receipt = new List<ReceiptItems>();
            Console.WriteLine("Receipt Below");
            
                foreach (var item in Items)
                {
                    List<string> Temp = item.Split(' ').ToList();

                    Double SalesTax = 0;
                    ReceiptItems A = new ReceiptItems();
                    A.NoOfItems = Convert.ToInt32(Temp[0]);
                    A.CostPerItem = Math.Round(Convert.ToDouble(Temp[Temp.Count - 1]),2);
                    Temp.RemoveAt(Temp.Count - 1);
                    Temp.RemoveAt(0);
                    A.Text = A.NoOfItems + " ";
                    if (Temp[Temp.Count - 1].ToLower().Contains("at"))
                    {
                        Temp.RemoveAt(Temp.Count - 1);
                    }
                    if (Temp.Any(x => x.ToLower().Contains("Import".ToLower())))
                    {
                        A.IsImported = true;
                        SalesTax = 5;
                    }
                    A.ItemName = String.Join(' ', Temp);
                    A.Text += A.ItemName + ':';
                    if (!NoTax.Any(x => A.ItemName.ToLower().Contains(x.ToLower())))
                    {

                        SalesTax += 10;
                    }

                    SalesTax = (SalesTax * A.CostPerItem * A.NoOfItems) / 100;
                    
                    if (Math.Round(SalesTax % 0.01, 3) == 0.005)
                    {
                        SalesTax += 0.01;
                    }
                    SalesTax = Math.Round(SalesTax * 20) / 20;
                    A.TaxAmount = SalesTax;
                    A.TaxAmount = A.TaxAmount;
                    A.TotalAmount = Math.Round((A.NoOfItems * A.CostPerItem) + A.TaxAmount,2);
                    A.Text += A.TotalAmount;
                    Console.WriteLine(A.Text);
                    receipt.Add(A);
                }
                Console.WriteLine("Sales Taxes: " + Convert.ToString(Convert.ToDecimal(receipt.Sum(x => x.TaxAmount))));
                Console.WriteLine("Total: " + Convert.ToString(Convert.ToDecimal(receipt.Sum(x => x.TotalAmount))));
            }
            catch(Exception ex)
            { Console.WriteLine("Kindly check the input. The format should be as follows: NoOfItems Imported(Optional) ItemName at CostPerItem");}
        }
    }







    public class ReceiptItems
    {
        public int NoOfItems { get; set; }
        public bool IsImported { get; set; }

        public String ItemName { get; set; }

        public Double CostPerItem { get; set; }

        public Double TaxAmount { get; set; }
        public Double TotalAmount { get; set; }
        public String Text { get; set; }
    }
}
